"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const Customer_1 = require("../../../models/Customer");
const CustomerContact_1 = require("../../../models/CustomerContact");
const State_1 = require("../../../models/State");
const CustomerCustomerContactArgs_1 = require("./args/CustomerCustomerContactArgs");
const helpers_1 = require("../../../helpers");
let CustomerRelationsResolver = class CustomerRelationsResolver {
    async CustomerContact(customer, ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).customer.findUniqueOrThrow({
            where: {
                id: customer.id,
            },
        }).CustomerContact({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async state(customer, ctx, info) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).customer.findUniqueOrThrow({
            where: {
                id: customer.id,
            },
        }).state({
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
};
exports.CustomerRelationsResolver = CustomerRelationsResolver;
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [CustomerContact_1.CustomerContact], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Info()),
    tslib_1.__param(3, TypeGraphQL.Args(_type => CustomerCustomerContactArgs_1.CustomerCustomerContactArgs)),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Customer_1.Customer, Object, Object, CustomerCustomerContactArgs_1.CustomerCustomerContactArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], CustomerRelationsResolver.prototype, "CustomerContact", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => State_1.State, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Info()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Customer_1.Customer, Object, Object]),
    tslib_1.__metadata("design:returntype", Promise)
], CustomerRelationsResolver.prototype, "state", null);
exports.CustomerRelationsResolver = CustomerRelationsResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Customer_1.Customer)
], CustomerRelationsResolver);
