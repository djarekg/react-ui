"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerContactUpdateManyWithoutCustomerNestedInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const CustomerContactCreateManyCustomerInputEnvelope_1 = require("../inputs/CustomerContactCreateManyCustomerInputEnvelope");
const CustomerContactCreateOrConnectWithoutCustomerInput_1 = require("../inputs/CustomerContactCreateOrConnectWithoutCustomerInput");
const CustomerContactCreateWithoutCustomerInput_1 = require("../inputs/CustomerContactCreateWithoutCustomerInput");
const CustomerContactScalarWhereInput_1 = require("../inputs/CustomerContactScalarWhereInput");
const CustomerContactUpdateManyWithWhereWithoutCustomerInput_1 = require("../inputs/CustomerContactUpdateManyWithWhereWithoutCustomerInput");
const CustomerContactUpdateWithWhereUniqueWithoutCustomerInput_1 = require("../inputs/CustomerContactUpdateWithWhereUniqueWithoutCustomerInput");
const CustomerContactUpsertWithWhereUniqueWithoutCustomerInput_1 = require("../inputs/CustomerContactUpsertWithWhereUniqueWithoutCustomerInput");
const CustomerContactWhereUniqueInput_1 = require("../inputs/CustomerContactWhereUniqueInput");
let CustomerContactUpdateManyWithoutCustomerNestedInput = class CustomerContactUpdateManyWithoutCustomerNestedInput {
};
exports.CustomerContactUpdateManyWithoutCustomerNestedInput = CustomerContactUpdateManyWithoutCustomerNestedInput;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactCreateWithoutCustomerInput_1.CustomerContactCreateWithoutCustomerInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "create", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactCreateOrConnectWithoutCustomerInput_1.CustomerContactCreateOrConnectWithoutCustomerInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "connectOrCreate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactUpsertWithWhereUniqueWithoutCustomerInput_1.CustomerContactUpsertWithWhereUniqueWithoutCustomerInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "upsert", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactCreateManyCustomerInputEnvelope_1.CustomerContactCreateManyCustomerInputEnvelope, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactCreateManyCustomerInputEnvelope_1.CustomerContactCreateManyCustomerInputEnvelope)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "createMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactWhereUniqueInput_1.CustomerContactWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "set", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactWhereUniqueInput_1.CustomerContactWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "disconnect", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactWhereUniqueInput_1.CustomerContactWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "delete", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactWhereUniqueInput_1.CustomerContactWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "connect", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactUpdateWithWhereUniqueWithoutCustomerInput_1.CustomerContactUpdateWithWhereUniqueWithoutCustomerInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "update", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactUpdateManyWithWhereWithoutCustomerInput_1.CustomerContactUpdateManyWithWhereWithoutCustomerInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "updateMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactScalarWhereInput_1.CustomerContactScalarWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactUpdateManyWithoutCustomerNestedInput.prototype, "deleteMany", void 0);
exports.CustomerContactUpdateManyWithoutCustomerNestedInput = CustomerContactUpdateManyWithoutCustomerNestedInput = tslib_1.__decorate([
    TypeGraphQL.InputType("CustomerContactUpdateManyWithoutCustomerNestedInput", {})
], CustomerContactUpdateManyWithoutCustomerNestedInput);
