"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerContactCreateNestedManyWithoutCustomerInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const CustomerContactCreateManyCustomerInputEnvelope_1 = require("../inputs/CustomerContactCreateManyCustomerInputEnvelope");
const CustomerContactCreateOrConnectWithoutCustomerInput_1 = require("../inputs/CustomerContactCreateOrConnectWithoutCustomerInput");
const CustomerContactCreateWithoutCustomerInput_1 = require("../inputs/CustomerContactCreateWithoutCustomerInput");
const CustomerContactWhereUniqueInput_1 = require("../inputs/CustomerContactWhereUniqueInput");
let CustomerContactCreateNestedManyWithoutCustomerInput = class CustomerContactCreateNestedManyWithoutCustomerInput {
};
exports.CustomerContactCreateNestedManyWithoutCustomerInput = CustomerContactCreateNestedManyWithoutCustomerInput;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactCreateWithoutCustomerInput_1.CustomerContactCreateWithoutCustomerInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactCreateNestedManyWithoutCustomerInput.prototype, "create", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactCreateOrConnectWithoutCustomerInput_1.CustomerContactCreateOrConnectWithoutCustomerInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactCreateNestedManyWithoutCustomerInput.prototype, "connectOrCreate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactCreateManyCustomerInputEnvelope_1.CustomerContactCreateManyCustomerInputEnvelope, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactCreateManyCustomerInputEnvelope_1.CustomerContactCreateManyCustomerInputEnvelope)
], CustomerContactCreateNestedManyWithoutCustomerInput.prototype, "createMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactWhereUniqueInput_1.CustomerContactWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CustomerContactCreateNestedManyWithoutCustomerInput.prototype, "connect", void 0);
exports.CustomerContactCreateNestedManyWithoutCustomerInput = CustomerContactCreateNestedManyWithoutCustomerInput = tslib_1.__decorate([
    TypeGraphQL.InputType("CustomerContactCreateNestedManyWithoutCustomerInput", {})
], CustomerContactCreateNestedManyWithoutCustomerInput);
