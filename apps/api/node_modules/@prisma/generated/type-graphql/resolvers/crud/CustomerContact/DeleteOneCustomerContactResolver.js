"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteOneCustomerContactResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const DeleteOneCustomerContactArgs_1 = require("./args/DeleteOneCustomerContactArgs");
const CustomerContact_1 = require("../../../models/CustomerContact");
const helpers_1 = require("../../../helpers");
let DeleteOneCustomerContactResolver = class DeleteOneCustomerContactResolver {
    async deleteOneCustomerContact(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).customerContact.delete({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
};
exports.DeleteOneCustomerContactResolver = DeleteOneCustomerContactResolver;
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => CustomerContact_1.CustomerContact, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args(_type => DeleteOneCustomerContactArgs_1.DeleteOneCustomerContactArgs)),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, DeleteOneCustomerContactArgs_1.DeleteOneCustomerContactArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], DeleteOneCustomerContactResolver.prototype, "deleteOneCustomerContact", null);
exports.DeleteOneCustomerContactResolver = DeleteOneCustomerContactResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => CustomerContact_1.CustomerContact)
], DeleteOneCustomerContactResolver);
