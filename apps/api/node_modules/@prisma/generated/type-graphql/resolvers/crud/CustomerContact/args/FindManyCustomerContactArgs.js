"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManyCustomerContactArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const CustomerContactOrderByWithRelationInput_1 = require("../../../inputs/CustomerContactOrderByWithRelationInput");
const CustomerContactWhereInput_1 = require("../../../inputs/CustomerContactWhereInput");
const CustomerContactWhereUniqueInput_1 = require("../../../inputs/CustomerContactWhereUniqueInput");
const CustomerContactScalarFieldEnum_1 = require("../../../../enums/CustomerContactScalarFieldEnum");
let FindManyCustomerContactArgs = class FindManyCustomerContactArgs {
};
exports.FindManyCustomerContactArgs = FindManyCustomerContactArgs;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactWhereInput_1.CustomerContactWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactWhereInput_1.CustomerContactWhereInput)
], FindManyCustomerContactArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactOrderByWithRelationInput_1.CustomerContactOrderByWithRelationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], FindManyCustomerContactArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactWhereUniqueInput_1.CustomerContactWhereUniqueInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactWhereUniqueInput_1.CustomerContactWhereUniqueInput)
], FindManyCustomerContactArgs.prototype, "cursor", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], FindManyCustomerContactArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], FindManyCustomerContactArgs.prototype, "skip", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactScalarFieldEnum_1.CustomerContactScalarFieldEnum], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], FindManyCustomerContactArgs.prototype, "distinct", void 0);
exports.FindManyCustomerContactArgs = FindManyCustomerContactArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], FindManyCustomerContactArgs);
