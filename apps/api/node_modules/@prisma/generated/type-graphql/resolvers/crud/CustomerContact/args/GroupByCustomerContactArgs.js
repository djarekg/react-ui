"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByCustomerContactArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const CustomerContactOrderByWithAggregationInput_1 = require("../../../inputs/CustomerContactOrderByWithAggregationInput");
const CustomerContactScalarWhereWithAggregatesInput_1 = require("../../../inputs/CustomerContactScalarWhereWithAggregatesInput");
const CustomerContactWhereInput_1 = require("../../../inputs/CustomerContactWhereInput");
const CustomerContactScalarFieldEnum_1 = require("../../../../enums/CustomerContactScalarFieldEnum");
let GroupByCustomerContactArgs = class GroupByCustomerContactArgs {
};
exports.GroupByCustomerContactArgs = GroupByCustomerContactArgs;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactWhereInput_1.CustomerContactWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactWhereInput_1.CustomerContactWhereInput)
], GroupByCustomerContactArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactOrderByWithAggregationInput_1.CustomerContactOrderByWithAggregationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByCustomerContactArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CustomerContactScalarFieldEnum_1.CustomerContactScalarFieldEnum], {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByCustomerContactArgs.prototype, "by", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactScalarWhereWithAggregatesInput_1.CustomerContactScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactScalarWhereWithAggregatesInput_1.CustomerContactScalarWhereWithAggregatesInput)
], GroupByCustomerContactArgs.prototype, "having", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByCustomerContactArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByCustomerContactArgs.prototype, "skip", void 0);
exports.GroupByCustomerContactArgs = GroupByCustomerContactArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], GroupByCustomerContactArgs);
