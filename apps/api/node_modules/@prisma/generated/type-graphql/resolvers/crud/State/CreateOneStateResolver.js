"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateOneStateResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const CreateOneStateArgs_1 = require("./args/CreateOneStateArgs");
const State_1 = require("../../../models/State");
const helpers_1 = require("../../../helpers");
let CreateOneStateResolver = class CreateOneStateResolver {
    async createOneState(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).state.create({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
};
exports.CreateOneStateResolver = CreateOneStateResolver;
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => State_1.State, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args(_type => CreateOneStateArgs_1.CreateOneStateArgs)),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, CreateOneStateArgs_1.CreateOneStateArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], CreateOneStateResolver.prototype, "createOneState", null);
exports.CreateOneStateResolver = CreateOneStateResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => State_1.State)
], CreateOneStateResolver);
