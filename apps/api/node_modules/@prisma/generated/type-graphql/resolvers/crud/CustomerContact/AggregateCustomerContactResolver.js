"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateCustomerContactResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AggregateCustomerContactArgs_1 = require("./args/AggregateCustomerContactArgs");
const CustomerContact_1 = require("../../../models/CustomerContact");
const AggregateCustomerContact_1 = require("../../outputs/AggregateCustomerContact");
const helpers_1 = require("../../../helpers");
let AggregateCustomerContactResolver = class AggregateCustomerContactResolver {
    async aggregateCustomerContact(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).customerContact.aggregate({
            ...args,
            ...(0, helpers_1.transformInfoIntoPrismaArgs)(info),
        });
    }
};
exports.AggregateCustomerContactResolver = AggregateCustomerContactResolver;
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => AggregateCustomerContact_1.AggregateCustomerContact, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args(_type => AggregateCustomerContactArgs_1.AggregateCustomerContactArgs)),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, AggregateCustomerContactArgs_1.AggregateCustomerContactArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], AggregateCustomerContactResolver.prototype, "aggregateCustomerContact", null);
exports.AggregateCustomerContactResolver = AggregateCustomerContactResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => CustomerContact_1.CustomerContact)
], AggregateCustomerContactResolver);
