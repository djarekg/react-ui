"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const StateCountAggregate_1 = require("../outputs/StateCountAggregate");
const StateMaxAggregate_1 = require("../outputs/StateMaxAggregate");
const StateMinAggregate_1 = require("../outputs/StateMinAggregate");
let StateGroupBy = class StateGroupBy {
};
exports.StateGroupBy = StateGroupBy;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], StateGroupBy.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], StateGroupBy.prototype, "name", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], StateGroupBy.prototype, "code", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StateCountAggregate_1.StateCountAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StateCountAggregate_1.StateCountAggregate)
], StateGroupBy.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StateMinAggregate_1.StateMinAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StateMinAggregate_1.StateMinAggregate)
], StateGroupBy.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StateMaxAggregate_1.StateMaxAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StateMaxAggregate_1.StateMaxAggregate)
], StateGroupBy.prototype, "_max", void 0);
exports.StateGroupBy = StateGroupBy = tslib_1.__decorate([
    TypeGraphQL.ObjectType("StateGroupBy", {
        simpleResolvers: true
    })
], StateGroupBy);
