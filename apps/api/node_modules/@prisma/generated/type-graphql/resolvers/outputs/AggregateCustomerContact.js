"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateCustomerContact = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const CustomerContactCountAggregate_1 = require("../outputs/CustomerContactCountAggregate");
const CustomerContactMaxAggregate_1 = require("../outputs/CustomerContactMaxAggregate");
const CustomerContactMinAggregate_1 = require("../outputs/CustomerContactMinAggregate");
let AggregateCustomerContact = class AggregateCustomerContact {
};
exports.AggregateCustomerContact = AggregateCustomerContact;
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactCountAggregate_1.CustomerContactCountAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactCountAggregate_1.CustomerContactCountAggregate)
], AggregateCustomerContact.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactMinAggregate_1.CustomerContactMinAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactMinAggregate_1.CustomerContactMinAggregate)
], AggregateCustomerContact.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CustomerContactMaxAggregate_1.CustomerContactMaxAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CustomerContactMaxAggregate_1.CustomerContactMaxAggregate)
], AggregateCustomerContact.prototype, "_max", void 0);
exports.AggregateCustomerContact = AggregateCustomerContact = tslib_1.__decorate([
    TypeGraphQL.ObjectType("AggregateCustomerContact", {
        simpleResolvers: true
    })
], AggregateCustomerContact);
